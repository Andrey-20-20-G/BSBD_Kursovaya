<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AuthorizationDataSet" targetNamespace="http://tempuri.org/AuthorizationDataSet.xsd" xmlns:mstns="http://tempuri.org/AuthorizationDataSet.xsd" xmlns="http://tempuri.org/AuthorizationDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AuthorizationConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AuthorizationConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BSBD_Kursovaya.Properties.Settings.GlobalReference.Default.AuthorizationConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Authorization_tableTableAdapter" GeneratorDataComponentClassName="Authorization_tableTableAdapter" Name="Authorization_table" UserDataComponentName="Authorization_tableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AuthorizationConnectionString (Settings)" DbObjectName="[Authorization].dbo.Authorization_table" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Authorization_table] WHERE (([User_ID] = @Original_User_ID) AND ([Login] = @Original_Login))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Authorization_table] ([User_ID], [Login], [Password]) VALUES (@User_ID, @Login, @Password);
SELECT User_ID, Login, Password FROM Authorization_table WHERE (User_ID = @User_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT User_ID, Login, Password FROM dbo.Authorization_table</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Authorization_table] SET [User_ID] = @User_ID, [Login] = @Login, [Password] = @Password WHERE (([User_ID] = @Original_User_ID) AND ([Login] = @Original_Login));
SELECT User_ID, Login, Password FROM Authorization_table WHERE (User_ID = @User_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="User_ID" DataSetColumn="User_ID" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AuthorizationDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="AuthorizationDataSet" msprop:Generator_DataSetName="AuthorizationDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Authorization_table" msprop:Generator_RowEvHandlerName="Authorization_tableRowChangeEventHandler" msprop:Generator_RowDeletedName="Authorization_tableRowDeleted" msprop:Generator_RowDeletingName="Authorization_tableRowDeleting" msprop:Generator_RowEvArgName="Authorization_tableRowChangeEvent" msprop:Generator_TablePropName="Authorization_table" msprop:Generator_RowChangedName="Authorization_tableRowChanged" msprop:Generator_RowChangingName="Authorization_tableRowChanging" msprop:Generator_TableClassName="Authorization_tableDataTable" msprop:Generator_RowClassName="Authorization_tableRow" msprop:Generator_TableVarName="tableAuthorization_table" msprop:Generator_UserTableName="Authorization_table">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="User_ID" msprop:Generator_ColumnPropNameInRow="User_ID" msprop:Generator_ColumnPropNameInTable="User_IDColumn" msprop:Generator_ColumnVarNameInTable="columnUser_ID" msprop:Generator_UserColumnName="User_ID" type="xs:int" />
              <xs:element name="Login" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Authorization_table" />
      <xs:field xpath="mstns:User_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>